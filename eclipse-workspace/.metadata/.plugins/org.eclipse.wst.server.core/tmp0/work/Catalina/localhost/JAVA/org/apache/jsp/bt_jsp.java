/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.2
 * Generated at: 2025-05-08 04:48:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.text.DecimalFormat;

public final class bt_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.DecimalFormat");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Bài tập HTML + Bootstrap</title>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Nhúng Bootstrap -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Bài 1 */\r\n");
      out.write("        .center-text {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .uppercase {\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("        }\r\n");
      out.write("        .text-red {\r\n");
      out.write("            color: red;\r\n");
      out.write("        }\r\n");
      out.write("        .bg-yellow {\r\n");
      out.write("            background-color: yellow;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Bài 2 */\r\n");
      out.write("        .table-custom th {\r\n");
      out.write("            background-color: #343a40;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        .table-custom td {\r\n");
      out.write("            background-color: #f8f9fa;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Bài 3 và 4 */\r\n");
      out.write("        .form-box {\r\n");
      out.write("            max-width: 600px;\r\n");
      out.write("            margin: 40px auto;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            background-color: #fdfdfd;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"container py-5\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Bài 1 -->\r\n");
      out.write("    <h2>Bài 1</h2>\r\n");
      out.write("    <h1 class=\"center-text uppercase text-red bg-yellow\">Nguyễn Văn A</h1>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bài 2 -->\r\n");
      out.write("    <h2 class=\"mt-5\">Bài 2</h2>\r\n");
      out.write("    <table class=\"table table-bordered table-custom text-center\">\r\n");
      out.write("        <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>STT</th>\r\n");
      out.write("                <th>Mã SV</th>\r\n");
      out.write("                <th>Họ và tên</th>\r\n");
      out.write("                <th>Quê quán</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>1</td>\r\n");
      out.write("                <td>SV001</td>\r\n");
      out.write("                <td>Nguyễn Văn A</td>\r\n");
      out.write("                <td>Hà Nội</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>2</td>\r\n");
      out.write("                <td>SV002</td>\r\n");
      out.write("                <td>Trần Thị B</td>\r\n");
      out.write("                <td>Huế</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bài 3 -->\r\n");
      out.write("    <h2 class=\"mt-5\">Bài 3 - Form Đăng nhập</h2>\r\n");
      out.write("    <form class=\"form-box\">\r\n");
      out.write("        <h3 class=\"text-center mb-4\">Đăng nhập</h3>\r\n");
      out.write("        <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"username\" class=\"form-label\">Tên đăng nhập</label>\r\n");
      out.write("            <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Tên đăng nhập\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"password\" class=\"form-label\">Mật khẩu</label>\r\n");
      out.write("            <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Mật khẩu\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-primary w-100\">Đăng nhập</button>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bài 4 -->\r\n");
      out.write("    <h2 class=\"mt-5\">Bài 4 - Form Đăng ký</h2>\r\n");
      out.write("    <form class=\"form-box\">\r\n");
      out.write("        <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"email\" class=\"form-label\">Email</label>\r\n");
      out.write("            <input type=\"email\" class=\"form-control\" id=\"email\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"pass\" class=\"form-label\">Password</label>\r\n");
      out.write("            <input type=\"password\" class=\"form-control\" id=\"pass\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"address\" class=\"form-label\">Address</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"address\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"address2\" class=\"form-label\">Address 2</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"address2\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"city\" class=\"form-label\">City</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"city\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"state\" class=\"form-label\">State</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"state\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"zip\" class=\"form-label\">Zip</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"zip\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-check mb-3\">\r\n");
      out.write("            <input class=\"form-check-input\" type=\"checkbox\" id=\"checkMeOut\">\r\n");
      out.write("            <label class=\"form-check-label\" for=\"checkMeOut\">\r\n");
      out.write("                Check me out\r\n");
      out.write("            </label>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-success\">Sign in</button>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
